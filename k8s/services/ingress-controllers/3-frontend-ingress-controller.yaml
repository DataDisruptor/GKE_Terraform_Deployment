# $ helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
# $ helm search repo nginx
# $ helm repo update
# $ helm install my-ing ingress-nginx/ingress-nginx --namespace ingress --version 4.6.0 --values nginx-controller.yaml --create-namespace

##################################################################################################################################################
# Helm version:
---
controller:
  config:
    compute-full-forwarded-for: "true"
    use-forwarded-headers: "true"
    proxy-body-size: "0"
  ingressClassResource:
    name: frontend-external-nginx
    enabled: true
    default: false
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - ingress-nginx
          topologyKey: "kubernetes.io/hostname"
  replicaCount: 1
  admissionWebhooks:
    enabled: false
  service:
    annotations:
      cloud.google.com/load-balancer-type: External
  metrics:
    enabled: false
##################################################################################################################################################
# Kubectl version:

# apiVersion: v1
# kind: controller
# metadata:
#   name: ingress-controller-leader-nginx
#   namespace: ingress-nginx
# data:
#   controller.cfg: |
#     compute-full-forwarded-for: "true"
#     use-forwarded-headers: "true"
#     proxy-body-size: "0"
#   ingressClassResource:
#     name: external-nginx
#     enabled: true
#     default: false
#   affinity:
#     podAntiAffinity:
#       requiredDuringSchedulingIgnoredDuringExecution:
#         - labelSelector:
#             matchExpressions:
#               - key: app.kubernetes.io/name
#                 operator: In
#                 values:
#                   - ingress-nginx
#           topologyKey: "kubernetes.io/hostname"
#   replicaCount: 1
#   admissionWebhooks:
#     enabled: false
#   service:
#     annotations:
#       cloud.google.com/load-balancer-type: External
#   metrics:
#     enabled: false

# Other Kubectl version (which actually works):

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-configuration
#   # namespace: ingress-nginx
# data:
#   # namespace: ingress-nginx (at controller.yaml->metadata->namespace)
#   controller.yaml: |-
#     apiVersion: v1
#     kind: ConfigMap
#     metadata:
#       name: nginx-configuration

#     data:
#       controller.json: |
#         ${jsonencode({
#           "config": {
#             "compute-full-forwarded-for": "true",
#             "use-forwarded-headers": "true",
#             "proxy-body-size": "0",
#           },
#           "ingressClassResource": {
#             "name": "external-nginx",
#             "enabled": true,
#             "default": false,
#           },
#           "affinity": {
#             "podAntiAffinity": {
#               "requiredDuringSchedulingIgnoredDuringExecution": [
#                 {
#                   "labelSelector": {
#                     "matchExpressions": [
#                       {
#                         "key": "app.kubernetes.io/name",
#                         "operator": "In",
#                         "values": [
#                           "ingress-nginx"
#                         ]
#                       }
#                     ]
#                   },
#                   "topologyKey": "kubernetes.io/hostname"
#                 }
#               ]
#             }
#           },
#           "replicaCount": 1,
#           "admissionWebhooks": {
#             "enabled": false
#           },
#           "service": {
#             "annotations": {
#               "cloud.google.com/load-balancer-type": "External"
#             }
#           },
#           "metrics": {
#             "enabled": false
#           }
#         })}
